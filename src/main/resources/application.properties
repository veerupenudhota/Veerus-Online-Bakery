## ========== Project Info ==========
#spring.application.name=ECommerceProject
#
## ========== JPA & Hibernate Config ==========
#spring.jpa.database=postgresql
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## ========== Datasource Config ==========
## Environment variables (used in AWS Beanstalk), with local default fallbacks
#spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/mydb}
#spring.datasource.username=${DB_USERNAME:postgres}
#spring.datasource.password=${DB_PASSWORD:password}
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## ========== Server Behavior ==========
#server.error.whitelabel.enabled=false
#
## ========== Static Resources ==========
#spring.web.resources.static-locations=classpath:/static/,file:./src/main/resources/static/
#



# Application name
spring.application.name=ECommerceProject
spring.jpa.database=postgresql
spring.datasource.url=jdbc:postgresql://dpg-d05pjimuk2gs73cn9lo0-a.oregon-postgres.render.com:5432/ecommerce_website
spring.datasource.username=ecommerce_website_user
spring.datasource.password=QHsg04Qjm7y65S0xYND55ndzXMiG6ehG
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.web.resources.static-locations=classpath:/static/,file:./src/main/resources/static/
server.error.whitelabel.enabled=false



